<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="auth">
	<select id="login_check" resultType="String">
		select
		user_id,
		user_pw
		user_name,
		enabled,
		authority
		from
		user
		where user_id = #{user_id} and user_pw = #{user_pw}
	</select>


<!--  ut.t_group_id   ==>  CASE WHEN ~  't_group_id' -->
<!--  END ... + LIMIT 1  -->
	<select id="selectUser" resultType="java.util.Map">
	select
		ur.user_id as username,
		user_pw as password,
		user_name,
		enabled,
		authority,
		user_upt_date,
		pw_error_cnt,
		pw_error_dt,
		CASE WHEN ut.t_group_id IS NULL THEN 0 ELSE ut.t_group_id END as 't_group_id'
		
	from user ur
	left join user_t_g ut
	on ur.user_id = ut.user_id
	where ur.user_id=#{user_id} LIMIT 1
	</select>
	
	<select id="selectUser_191001" resultType="com.example.spring03.UserDetails.MyUserDetails">
	select
		ur.user_id as username,
		user_pw as password,
		user_name,
		enabled,
		authority,
		user_upt_date,
		pw_error_cnt,
		pw_error_dt,
		ut.t_group_id
		
	from user ur
	left join user_t_g ut
	on ur.user_id = ut.user_id
	where ur.user_id=#{user_id}
	</select>
	
	<select id="selectUser_191010" resultType="com.example.spring03.UserDetails.MyUserDetails">
	select
		ur.user_id as username,
		user_pw as password,
		user_name,
		enabled,
		authority,
		user_upt_date,
		pw_error_cnt,
		pw_error_dt,
		CASE WHEN ut.t_group_id IS NULL THEN 0 ELSE ut.t_group_id END as 't_group_id'
		
	from user ur
	left join user_t_g ut
	on ur.user_id = ut.user_id
	where ur.user_id=#{user_id} LIMIT 1
	</select>
	
<!-- 회원 등록 -->
	<insert id="insertUser">
insert into user (
	user_id,
    user_pw,
    user_name,
    enabled,
    user_phone,
    user_email,
    user_addr, 
    user_addr_1,
    authority,
    group_name
)
values(
	#{user_id},
    #{user_pw},
    #{user_name},
    			1,
    #{user_phone},
    #{user_email}, 
    #{user_addr},
    #{user_addr_1},
    #{authority},
    #{group_name} )
	</insert>
	
	<select id="pwChkLoginChk" parameterType="com.example.spring03.User.dto.userDTO" resultType="com.example.spring03.User.dto.userDTO">
		select	case when count(user_id) >= 1 then 'true'
				else 'false'
				end				as isUser
		from	user
	   	where	user_id = #{user_id}
		and		pw_error_cnt <![CDATA[<]]> 5
	</select>
	
	<update id="pwErrorUpdate" parameterType="com.example.spring03.User.dto.userDTO">
		update	user
		set		pw_error_cnt = ${pw_error_cnt}
				,pw_error_dt = now()
		where	user_id = #{user_id}
	</update>
	
	<update id="pwErrorReset" parameterType="com.example.spring03.User.dto.userDTO">
		update	user
		set		pw_error_cnt = 0
				,pw_error_dt = null
		where	user_id = #{user_id}
	</update>
	
	<select id="getDate" resultType="Date">
		select now()
	</select>
	
	<update id="pwReset" parameterType="com.example.spring03.User.dto.userDTO">
		update	user
		set		user_pw = #{user_pw}
				,pw_error_cnt = 0
				,pw_error_dt = null
				<if test="resetChk.equals('reset')">
					,user_upt_date = null
				</if>
				<if test="!resetChk.equals('reset')">
					,user_upt_date = now()
				</if>
		
		where	user_id = #{user_id}
	</update>
	
</mapper>