<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">
	
	
	
	
	<!-- 스프링의 환경설정 파일 로딩 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/root-context.xml 
			/WEB-INF/spring/appServlet/servlet-context.xml
			/WEB-INF/spring/message-context.xml
			/WEB-INF/spring/security/security-context.xml
		</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<!-- 한글 처리를 위한 인코딩 필터 -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 한글 처리를 위한 인코딩 필터 -->
	<!-- 에러 처리 페이지 -->
	<error-page>
    	<error-code>404</error-code>
    	<location>/User_auth/Login</location>
  	</error-page>
  	<error-page>
    	<error-code>500</error-code>
    	<location>/User_auth/Login</location>
  	</error-page>
	<!-- 서블릿의 환경설정 -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- 서블릿의 환경설정 -->
<!-- Spring security 
1. 스프링 시큐리티에서 사용하는 세션 이벤트 처리 관련 리스너 세션 만료 체크, 동시 로그인 제한 동의 기능 제공
2.애플리케이션의 모든 요청을 스프링 시큐리티에서 처리하도록 하는 필터 -->
	<listener>
		<listener-class>
org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	<!-- 모든 요청을 스프링 시큐리티에서 처리 하도록 하는 필터 -->
 	<!-- 애플리케이션의 모든 요청을 
	스프링 시큐리티에서 처리하도록 하는 필터 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>
org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
<!-- Spring security -->
	
	<!-- 세션 20분 -->
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>
</web-app>