<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="user">
	
	<select id="userListCount" resultType="int">
		select count(*) from user
	</select>
	
	<select id="userlist" resultType="com.example.spring03.User.dto.userDTO">
	SELECT *
	FROM
	
	    (SELECT    @rn := @rn +1 AS tNum
	        ,user_id
	        ,user_pw
	        ,user_name
	        ,authority
	        ,group_name
	        ,user_phone
	        ,user_email
	        ,user_addr
	        ,user_addr_1
	        ,user_reg_date
	    FROM    (
	            SELECT
	                *
	            FROM USER
	            
	            ORDER BY user_id DESC
		        )sa
		        ,(SELECT @rn := 0) R
	    ) sq
	    WHERE tNum BETWEEN ${startRow} AND ${endRow}
	</select>
	
	<select id="userlist_190919" resultType="com.example.spring03.User.dto.userDTO">
	SELECT *
	FROM
	
	    (SELECT    @rn := @rn +1 AS tNum
	        ,user_id
	        ,user_pw
	        ,user_name
	        ,authority
	        ,b.t_group_name as 'group_name'
	        ,user_phone
	        ,user_email
	        ,user_addr
	        ,user_addr_1
	        ,user_reg_date
	    FROM    (
	            SELECT
	                *
	            FROM USER
	            
	            ORDER BY user_id DESC
		        )sa 
		        LEFT JOIN 
		        (SELECT t_group_id, t_group_name FROM t_group) as b 
				ON b.t_group_id = sa.group_id		        
		        ,(SELECT @rn := 0) R
	    ) sq
	    WHERE tNum BETWEEN ${startRow} AND ${endRow}
	</select>
	
	<select id="userlist_191125" resultType="com.example.spring03.User.dto.userDTO">
		SELECT *
	FROM 
	    (SELECT    @rn := @rn +1 AS tNum
	        ,sa.user_id
	        ,user_pw
	        ,user_name
	        ,authority
	        ,b.t_group_name as 'group_name'
	        ,user_phone
	        ,user_email
	        ,user_addr
	        ,user_addr_1
	        ,user_reg_date
		FROM   	
        
				( SELECT * FROM USER ORDER BY user_id DESC ) sa 
                LEFT JOIN
                ( SELECT _b.*, utg.user_id FROM
                ( SELECT * FROM user_t_g GROUP BY user_id ) as utg
					JOIN
		        (SELECT t_group_id, t_group_name FROM t_group) as _b 
					ON utg.t_group_id = _b.t_group_id ) as b
				ON sa.user_id = b.user_id 
		        ,(SELECT @rn := 0) R
	    ) sq;
	</select>
		<!-- 회원 등록 -->
	<insert id="insert">
		insert into user (
			user_id,
		    user_pw,
		    user_pw2,
		    user_name,
		    user_phone,
		    user_email,
		    user_addr, 
		    user_addr_1,
		    authority,
		    group_name,
		    enabled
		)
		values(
			#{user_id},
		    #{user_pw},
		    #{user_pw2},
		    #{user_name},
		    #{user_phone},
		    #{user_email}, 
		    #{user_addr},
		    #{user_addr_1},
		    #{authority},
		    #{group_name},
		    			1
		       )
	</insert>
	
	<insert id="insert_190919">
		insert into user (
			user_id,
		    user_pw,
		    user_pw2,
		    user_name,
		    user_phone,
		    user_email,
		    user_addr, 
		    user_addr_1,
		    authority,
		    group_id,
		    enabled
		)
		values(
			#{user_id},
		    #{user_pw},
		    #{user_pw2},
		    #{user_name},
		    #{user_phone},
		    #{user_email}, 
		    #{user_addr},
		    #{user_addr_1},
		    #{authority},
		    #{t_group_id},
		    			1
		       )
	</insert>
	
	<insert id="insert_191010">
		insert into user (
			user_id,
		    user_pw,
		    user_pw2,
		    user_name,
		    user_phone,
		    user_email,
		    user_addr, 
		    user_addr_1,
		    authority,
		    group_id,
		    enabled
		)
		values(
			#{user_id},
		    #{user_pw},
		    #{user_pw2},
		    #{user_name},
		    #{user_phone},
		    #{user_email}, 
		    #{user_addr},
		    #{user_addr_1},
		    #{authority},
		    CASE WHEN #{t_group_id} = '0' THEN NULL ELSE #{t_group_id} END ,
		    			1
		       )
	</insert>
	
	<insert id="insertTgroupUser">
		insert into user_t_g
		(
			user_id
			,t_group_id
		)
		values
		(
			#{user_id},
			#{t_group_id}
		)
	</insert>
	
	<insert id="insertTgroupUser_191010">
		insert into user_t_g
		(
			user_id
			,t_group_id
		)
		values
		(
			#{user_id},
			CASE WHEN #{t_group_id} = '0' THEN NULL ELSE #{t_group_id} END 
		)
	</insert>
	
	<select id="viewUser" resultType="com.example.spring03.User.dto.userDTO">
		select	ur.user_id,
			    user_pw,
			    user_pw2,
			    user_name,
			    user_phone,
			    user_email,
			    user_addr, 
			    user_addr_1,
			    authority,
			    group_name,
			    enabled,
			    ut.t_group_id,
			    user_reg_date
			    
		from user ur
		left join user_t_g ut
		on ur.user_id = ut.user_id
		where ur.user_id = #{user_id}
	</select>
	
	<select id="viewUser_190920" resultType="com.example.spring03.User.dto.userDTO">
		select	ur.user_id,
			    user_pw,
			    user_pw2,
			    user_name,
			    user_phone,
			    user_email,
			    user_addr, 
			    user_addr_1,
			    authority,
			    group_name,
			    enabled,
			    ut.t_group_id,
			    user_reg_date
			    
		from user ur
		left join user_t_g ut
		on ur.group_id = ut.t_group_id AND ur.user_id = ut.user_id
		where ur.user_id = #{user_id}
	</select>
	
	<select id="viewUser_191010" resultType="com.example.spring03.User.dto.userDTO">
		select	ur.user_id,
			    user_pw,
			    user_pw2,
			    user_name,
			    user_phone,
			    user_email,
			    user_addr, 
			    user_addr_1,
			    authority,
			    group_name,
			    enabled,
			    ut.t_group_id,
			    user_reg_date
			    
		from user ur
		left join user_t_g ut
		on ur.group_id = ut.t_group_id AND ur.user_id = ut.user_id
		where ur.user_id = #{user_id} LIMIT 1
	</select>
	
	<update id="updateUser">
		update	user
		set		user_name = #{user_name},
				user_phone = #{user_phone},
				user_email = #{user_email},
				user_birth = #{user_birth},
				user_addr  = #{user_addr},
				user_addr_1  = #{user_addr_1}
				
		where user_id = #{user_id}
	</update>
	
	<update id="updateUser_190920">
		update	user
		set		user_name = #{user_name},
				user_phone = #{user_phone},
				user_email = #{user_email},
				user_birth = #{user_birth},
				user_addr  = #{user_addr},
				user_addr_1  = #{user_addr_1},
				group_id = #{t_group_id}
				
		where user_id = #{user_id}
	</update>
	
	<update id="updateUser_191010">
		update	user
		set		user_name = #{user_name},
				user_phone = #{user_phone},
				user_email = #{user_email},
				user_birth = #{user_birth},
				user_addr  = #{user_addr},
				user_addr_1  = #{user_addr_1},
				group_id = CASE WHEN #{t_group_id} = '0' THEN NULL ELSE #{t_group_id} END
		where user_id = #{user_id}
	</update>
	
	<update id="updateTgroupUser">
		update	user_t_g
		set		t_group_id = #{t_group_id}
				
		where user_id = #{user_id}
	</update>
	
	<update id="updateTgroupUser_191010">
		update	user_t_g
		set		t_group_id = CASE WHEN #{t_group_id} = '0' THEN NULL ELSE #{t_group_id} END				
		where user_id = #{user_id}
	</update>
	
	<delete id="deleteUser" parameterType="java.lang.String" statementType="PREPARED">
		delete from user
		where user_id = #{user_id}
	</delete>
	
	<!-- 유저 비밀번호 체크 -->
	<select id="check" resultType="int">
		select count(*) from user 
		where user_id = #{user_id}
		and   user_pw = #{user_pw}
	</select>
	 
	<select id="checkID" resultType="com.example.spring03.User.dto.userDTO">
		select count(*) from user
		where user_id = #{user_id}
		and user_pw = #{user_pw}
	</select>
	
	<select id="user_group_choice"
		resultType="com.example.spring03.User.dto.userDTO">
		select	t_group_id
				, t_group_name
				
		from t_group
	</select>
	
	<select id="ID_check" parameterType="String" resultType="int">
		select count(*) from user
		where user_id = #{user_id}
	</select>
	
	<select id="selectTgroupUser" resultType="int">
		select count(*) from user_t_g
		where user_id = #{user_id}
	</select>
	

</mapper>
